image: docker:latest

before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client make -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SSH_PRIVATE_KEY"
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  ##
  ## Check identity of server to avoid Man-in-the-middle
  ##
  - ssh-keyscan 155.133.129.16 >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts


test_feature_branches:
  stage: test
  except:
    - develop
    - main
  script:
    - pnpm lint
    # - pnpm test-ci
  artifacts:
    when: always
    reports:
      junit:
        - ./coverage/junit.xml

deploy_staging:
  only:
      - develop
  script:
    - make build-staging
    - docker login registry.gitlab.com -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker push derive-companion-costarica-staging

deploy_prod:
  only:
      - main
  script:
    - make build-production
    - docker login registry.gitlab.com -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker push derive-companion-costarica-production
